import React, { useCallback } from 'react';
import { useCart } from '../CartProvider/index.js';
import { useCartLine } from '../CartLineProvider/index.js';
import { BaseButton } from '../BaseButton/index.js';
/**
 * The `CartLineQuantityAdjustButton` component renders a button that adjusts the cart line's quantity when pressed.
 * It must be a descendent of a `CartLineProvider` component.
 */
export function CartLineQuantityAdjustButton(props) {
    const { status, linesRemove, linesUpdate } = useCart();
    const cartLine = useCartLine();
    const { children, adjust, onClick, ...passthroughProps } = props;
    const handleAdjust = useCallback(() => {
        if (adjust === 'remove') {
            linesRemove([cartLine?.id ?? '']);
            return;
        }
        const quantity = adjust === 'decrease'
            ? (cartLine?.quantity ?? 0) - 1
            : (cartLine?.quantity ?? 0) + 1;
        if (quantity <= 0) {
            linesRemove([cartLine?.id ?? '']);
            return;
        }
        const lineUpdate = {
            id: cartLine?.id ?? '',
            quantity,
            attributes: (cartLine?.attributes ??
                []),
        };
        linesUpdate([lineUpdate]);
    }, [
        adjust,
        cartLine?.attributes,
        cartLine?.id,
        cartLine?.quantity,
        linesRemove,
        linesUpdate,
    ]);
    return (React.createElement(BaseButton, { onClick: onClick, defaultOnClick: handleAdjust, ...passthroughProps, disabled: typeof passthroughProps.disabled !== 'undefined'
            ? passthroughProps.disabled
            : status !== 'idle' }, children));
}
